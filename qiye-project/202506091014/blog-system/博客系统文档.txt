
需求：

本博客系统将包括以下主要功能模块：

用户注册与登录
个人主页管理
博客文章的创建、编辑、删除
博客点赞与评论
博客搜索
他人博客查看
3. 功能性需求
3.1 用户模块
3.1.1 用户注册
用户可以使用用户名和密码进行注册
系统应校验用户名和邮箱的唯一性
注册成功后可自动登录或跳转至登录页
3.1.2 用户登录
支持用户名/邮箱 + 密码登录
登录成功后返回JWT令牌
登录失败时提示具体错误信息（如账号不存在、密码错误）
3.1.3 用户注销
提供登出功能，清除本地JWT令牌
3.1.4 用户资料管理
允许用户修改头像、昵称、邮箱等基本信息
显示用户基本信息（如注册时间、最后登录时间）
3.2 博客模块
3.2.1 创建博客
用户登录后可创建新博客
支持富文本编辑器
可保存为草稿或直接发布
支持添加标签或分类（可选）
3.2.2 编辑博客
用户只能编辑自己发布的博客
支持从草稿状态更新为已发布
修改后保留历史版本（可选）
3.2.3 删除博客
用户可删除自己的博客
删除后进入回收站（可选）或永久删除
删除后不再显示在任何列表中
3.2.4 查看博客
支持按ID查看博客详情
显示博客标题、内容、作者、发布时间、阅读数、点赞数
显示评论列表（如有）
支持分页浏览博客列表
3.3 评论模块
3.3.1 添加评论
已登录用户可对博客发表评论
评论内容长度限制（如不少于5个字符）
评论提交后即时显示
3.3.2 删除评论
评论者本人可删除自己的评论
作者或管理员也可删除不当评论
3.4 点赞模块
3.4.1 点赞博客
已登录用户可对博客点赞
同一用户对同一博客只能点赞一次
点击取消点赞后计数减少
3.5 个人主页模块
3.5.1 查看个人主页
显示用户基本信息
显示该用户的博客列表（分页）
显示用户最近发布的博客
3.5.2 查看他人主页
点击他人博客或评论可跳转到其主页
显示其公开的博客列表
不允许编辑他人信息
3.6 搜索模块
3.6.1 搜索博客
支持关键词全文搜索
支持按标签筛选
返回匹配度高的结果（如标题匹配优先）
分页展示搜索结果

概要设计

1. 系统概述
本博客系统是一个基于Web的个人博客平台，主要功能包括用户注册、登录、个人主页管理、博客文章发布与管理、评论互动以及搜索功能。系统采用前后端分离架构，前端负责展示和交互，后端提供数据处理和接口服务。

2. 系统架构
2.1 技术选型
前端：Vue3 + Element UI
后端：Spring Boot 3x (Java) ，Java21
数据库：sqllite3

3. 功能模块划分
3.1 用户模块
注册/登录/注销
用户信息管理
用户权限控制（JWT认证）
3.2 博客模块
创建/编辑/删除博客
发布/草稿状态管理
博客分类与标签
博客点赞功能
3.3 评论模块
添加/删除评论
评论列表展示
评论回复功能
3.4 个人主页模块
用户博客列表展示
用户信息展示
访问统计功能
3.5 搜索模块
全文搜索功能
标签筛选功能

4. 数据库设计
4.1 主要表结构
用户表(users)
博客表(posts)
评论表(comments)
点赞记录表(likes)

5. 接口设计
5.1 用户相关接口
POST /api/users/register - 用户注册
POST /api/users/login - 用户登录
GET /api/users/{id} - 获取用户信息
PUT /api/users/{id} - 更新用户信息
5.2 博客相关接口
POST /api/posts - 创建博客
GET /api/posts/{id} - 获取博客详情
PUT /api/posts/{id} - 更新博客
DELETE /api/posts/{id} - 删除博客
GET /api/posts - 分页获取博客列表
5.3 评论相关接口
POST /api/comments - 添加评论
GET /api/posts/{postId}/comments - 获取博客评论
DELETE /api/comments/{id} - 删除评论
5.4 搜索接口
GET /api/search/posts - 搜索博客
6. 安全设计
使用JWT进行身份验证
密码加密存储（BCrypt）
接口权限控制（RBAC模型）
防止XSS和CSRF攻击

详细设计
1. 模块详细设计
1.1 用户模块
1.1.2 业务流程
注册流程
验证用户名和邮箱唯一性
密码加密存储
发送激活邮件（可选）
登录流程
验证用户凭证
生成JWT令牌
返回用户信息和令牌

1.2 博客模块
1.2.2 业务流程
创建博客流程
验证用户权限
保存草稿或直接发布
处理分类和标签关联
点赞流程
1.3 评论模块

数据库设计

3.1 索引设计
users.username 字段添加唯一索引
posts.user_id 字段添加索引
posts.title 和 posts.content 添加全文索引
likes 表添加复合唯一索引 (user_id, post_id)
3.2 分表策略
用户量达到百万级时对 posts 表按用户ID进行水平分表
评论数据量大时按时间进行垂直分表


页面设计：

1. 页面分类（Page Frames）
页面名称	描述
Home Page	首页 - 展示最新博客列表
Login Page	登录页
Register Page	注册页
Post Detail Page	博客详情页
Create/Edit Post Page	创建/编辑博客页
User Profile Page	用户主页
Search Results Page	搜索结果页
Components Library	组件库
四、页面结构与元素（以首页为例）
📄 首页（Home Page）
结构示意：
深色版本
+----------------------------+
|         导航栏              |
+----------------------------+
|    搜索框 + 分类筛选        |
+----------------------------+
|      最新博客卡片列表       |
|   - 标题                    |
|   - 摘要                    |
|   - 作者头像 + 昵称         |
|   - 点赞数 / 评论数         |
+----------------------------+
|         分页控件            |
+----------------------------+
使用组件：
Navbar：顶部导航栏
SearchBar：搜索输入框
PostCard：博客卡片组件
Pagination：分页组件
📝 博客详情页（Post Detail Page）
结构示意：
深色版本
+----------------------------+
|     返回按钮 + 分享按钮     |
+----------------------------+
|          博客标题           |
|     作者头像 + 昵称         |
|      发布时间 + 分类标签    |
|         Markdown 内容       |
|     点赞按钮 + 评论按钮     |
+----------------------------+
|         评论区             |
|   - 用户头像 + 昵称         |
|   - 评论内容                |
|   - 回复功能        |
|   - 发表评论输入框          |
+----------------------------+
使用组件：
MarkdownRenderer：Markdown 渲染器
CommentCard：评论条目
CircleAvatar：圆形头像组件
LikeButton：点赞按钮

五、组件库设计（Components Library）
1. 圆形组件（Circle Avatar）
尺寸：small (32x32), medium (48x48), large (64x64)
状态：默认态、点击态、悬停态
2. 按钮组件（Buttons）
Primary Button：主操作按钮（如“登录”、“发布”）
Secondary Button：次级操作按钮（如“取消”、“草稿保存”）
Icon Button：图标按钮（如点赞 ❤️）
3. 表单组件（Form Controls）
Input Text：文本输入框
Password Field：密码输入框
Select Dropdown：下拉选择器
Checkbox & Radio：选项选择
TextArea：多行文本框
4. 卡片组件（Cards）
PostCard：博客卡片
UserInfoCard：用户信息卡片
CommentCard：评论卡片
5. 导航组件（Navigation）
Navbar：顶部导航栏
Sidebar：侧边栏（PC端）
DrawerMenu：移动端抽屉菜单


博客内容支持图片和视频的设计方案
一、背景与目标
为了丰富博客内容的表现形式，增强用户的阅读体验，博客系统需要支持在文章中插入图片和视频。本设计文档旨在为前端和后端提供统一的技术实现方案和 UI 展示逻辑。

二、功能需求
1. 图片支持
用户可以在 Markdown 编辑器或富文本编辑器中插入本地或网络图片
支持拖拽上传、粘贴上传、点击上传等多种方式
支持图片预览、缩放、删除等操作
2. 视频支持
支持嵌入外部视频链接（如 YouTube、Bilibili）
支持上传本地视频并播放
支持封面图设置、自动播放控制、播放器样式定制
三、后端设计
1. 文件上传接口
接口：POST /api/upload
参数名	类型	必填	描述
file	File	是	要上传的文件（图片/视频）
type	String	否	文件类型（image/video），默认自动识别

四、前端设计
1. 富文本编辑器支持
推荐使用：mavon-editor 或 Vue3-TinyMCE + 自定义插件
图片上传组件逻辑：
拖拽区域监听 drop 事件
文件选择框监听 change 事件
调用 /api/upload 接口上传
成功后将 [图片地址] 插入到编辑器光标位置

视频插入方式：
支持手动输入链接格式：
或通过按钮弹窗插入视频链接（推荐封装为自定义插件）
五、Markdown 渲染组件设计（MarkdownRenderer.vue）
1. 图片渲染优化
添加 Lightbox 效果，点击放大查看
添加懒加载属性 loading="lazy"
添加响应式属性 srcset 和 sizes

2. 视频播放器组件（VideoPlayer.vue）
支持以下功能：
支持 MP4、WebM、HLS 等主流格式
支持封面图展示
支持自动播放、静音播放
支持移动端适配
支持第三方平台嵌入（如 Bilibili、YouTube）



依据·这些文档开发出一个博客系统的项目。
